{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","removeProduct","good","setState","lastState","filter","item","addProduct","resetCart","messageType","goods","length","join","slice","this","className","type","onClick","map","buttonName","includes","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAQ,CACNC,cAAe,CAAC,Q,EAGlBC,cAAgB,SAACC,GACf,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAC5BJ,cACEI,EAAUJ,cAAcK,QAAO,SAACC,GAAD,OAAUA,IAASJ,U,EAIxDK,WAAa,SAACL,GACZ,EAAKC,UAAS,SAACC,GAAD,MACZ,CAAEJ,cAAc,GAAD,mBAAMI,EAAUJ,eAAhB,CAA+BE,S,EAIlDM,UAAY,kBACV,EAAKL,SAAS,CAAEH,cAAe,M,EAGjCS,YAAc,SAACC,GACb,IAAQC,EAAWD,EAAXC,OAER,OAAQA,GACN,KAAK,EACH,MAAO,oBAET,KAAK,EACH,MAAM,GAAN,OAAUD,EAAM,GAAhB,gBAEF,KAAK,EACH,MAAM,GAAN,OAAUA,EAAME,KAAK,SAArB,iBAEF,QACE,MAAM,GAAN,OAAUF,EAAMG,MAAM,GAAI,GAAGD,KAAK,MAAlC,yBACEF,EAAMC,EAAS,GADjB,mB,4CAKN,WAAU,IAAD,OACCX,EAAkBc,KAAKf,MAAvBC,cAER,OACE,sBAAKe,UAAU,MAAf,UACE,qBAAKA,UAAU,YAAf,SACE,+BACGD,KAAKL,YAAYK,KAAKf,MAAMC,eAC5B,IAED,wBACEgB,KAAK,SACLC,QAASH,KAAKN,UAFhB,8BASJ,6BACGX,EAAgBqB,KAAI,SAAChB,GACpB,IAAMiB,EAAanB,EAAcoB,SAASlB,GACtC,SACA,SAQJ,OACE,sBAAKa,UAAU,QAAf,UACE,6BACGb,GADMA,GAGT,wBACEc,KAAK,SACLC,QAbS,kBACbjB,EAAcoB,SAASlB,GACnB,EAAKD,cAAcC,GACnB,EAAKK,WAAWL,IAQlB,SAIGiB,mB,GAjFDE,IAAMC,WA4FTxB,IC7GfyB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.63ca9eab.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[],\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  removeProduct = (good: string) => {\n    this.setState((lastState) => ({\n      selectedGoods:\n        lastState.selectedGoods.filter((item) => item !== good),\n    }));\n  };\n\n  addProduct = (good: string) => {\n    this.setState((lastState) => (\n      { selectedGoods: [...lastState.selectedGoods, good] }\n    ));\n  };\n\n  resetCart = () => (\n    this.setState({ selectedGoods: [] })\n  );\n\n  messageType = (goods: string[]) => {\n    const { length } = goods;\n\n    switch (length) {\n      case 0:\n        return 'No goods selected';\n\n      case 1:\n        return `${goods[0]} is selected`;\n\n      case 2:\n        return `${goods.join(' and ')} are selected`;\n\n      default:\n        return `${goods.slice(0, -1).join(', ')} and\n        ${goods[length - 1]} are selected`;\n    }\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"list-item\">\n          <h1>\n            {this.messageType(this.state.selectedGoods)}\n            {' '}\n\n            <button\n              type=\"button\"\n              onClick={this.resetCart}\n            >\n              Clear goods\n            </button>\n          </h1>\n        </div>\n\n        <ul>\n          {goodsFromServer.map((good) => {\n            const buttonName = selectedGoods.includes(good)\n              ? 'Remove'\n              : 'Select';\n\n            const handle = () => (\n              selectedGoods.includes(good)\n                ? this.removeProduct(good)\n                : this.addProduct(good)\n            );\n\n            return (\n              <div className=\"goods\">\n                <li key={good}>\n                  {good}\n                </li>\n                <button\n                  type=\"button\"\n                  onClick={handle}\n                >\n                  {buttonName}\n                </button>\n              </div>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}